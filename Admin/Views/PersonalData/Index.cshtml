@model PersonalDataTable

@{

    ViewData["Title"] = "Registrations";
}



<div class="content-wrapper">
    <div class="page-title">
        <span class="title-data" data-main=''>@ViewData["Title"]</span>
    </div>
    <div class="card main-card w-100">

        <div class="card-body">

            @* <a asp-action="Create" class="btn my_btn btn-clean btn-primary btn-sm "><i class="fa fa-plus"></i> Create New</a> *@
            <form class="row" id="manage_form" method="post" asp-action="">
                <div class="col-xl-3 col-lg-4 col-md-6">
                    <div class="form-group">
                        <label for="Name">Full Name</label>
                        <input type="text" id="Name" name="Name" class="form-control" placeholder="">
                    </div>
                </div>

                <div class="col-xl-3 col-lg-4 col-md-6">
                    <div class="form-group">
                        <label for="Email"> E-mail</label>
                        <input type="text" id="Email" name="email" class="form-control" placeholder="">
                    </div>
                </div>


                <div class="col-xl-3 col-lg-4 col-md-6">
                    <div class="form-group">
                        <label for="Phone"> Phone</label>
                        <input type="text" id="Phone" name="Phone" class="form-control" placeholder="">
                    </div>
                </div>


                <div class="col-xl-3 col-lg-4 col-md-6">
                    <div class="form-group">
                        <label for="Age">Age</label>
                        <input type="text" id="Age" name="Age" class="form-control" placeholder="">
                    </div>
                </div>



                <div class="col-xl-12 col-lg-4 col-md-6 text-right">
                    <div class="from-group">
                        <labe class="d-block">&nbsp;</labe>
                        <button type="submit" name="" value="true" class="btn btn-primary mt-2">Search</button>
                    </div>
                </div>
                @*<div class="col-md-2">
                <button type="submit" name="cancelOrder" value="true" class="btn btn-danger" id="btnCancelOrder">Cancel Order</button>
                </div>
                <div class="col-md-2">
                <button type="submit" name="scheduleOrder" value="true" class="btn btn-dark" id="btnScheduleOrder">Re-Schedule Order</button>
                </div>*@
                @*                onclick = 'Copy( "@item.ClientId" )'
 *@
            </form>
            <div class="table-fix scroll-x">
                @Html.AntiForgeryToken()

                <jquery-datatables id="approved"
                                   class=" table table-striped table-bordered"
                                   model="@Model"
                                   thead-class="text-center"
                                   enable-searching="true"
                                   search-row-th-class="p-0"
                                   search-input-class="form-control form-control-sm"
                                   search-input-style=""
                                   search-input-placeholder-prefix="Search">
                </jquery-datatables>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script>

        $("#manage_form").on("submit", function (e)
        {
            e.preventDefault();
            loadTableWithData()
        });

        $(() =>
        {

            var template = "<'d-flex justify-content-between align-items-center my-dt-header 'Bf<'btn-clean'>>" +
                "<'overflow-x slim-scroll-w'tr>" +
                "<'d-flex justify-content-between align-items-center my-dt-footer'lpi>";

            if ($('#approved').length !== 0)
            {
                function loadFinish(data)
                {
                    $(".reload_table i").removeClass("fa-spin")
                }
                $.fn.dataTable.ext.buttons.reload = {
                    text: 'Reload',
                    action: function (e, dt, node, config)
                    {
                        console.log(dt);
                        $(".reload_table i").addClass("fa-spin")
                        dt.ajax.reload(loadFinish);

                    }
                };

                var table = $('#approved').DataTable({
                    language: {
                        processing: "@_localizer["Loading Data..."]",
                        zeroRecords: "@_localizer["No matching records found"]"
                    },
                    processing: true,
                    serverSide: true,
                    orderCellsTop: true,
                    searching: true,
                    autoWidth: false,
                    deferRender: true,
                    lengthMenu: [10, 50, 100, 1000],
                    order: [[0, "desc"]],
                    buttons: [
                        { extend: 'reload', className: 'btn my_btn btn-sm reload_table', exportOptions: { columns: [$('thead th:not(.noexport):not(:empty)')] }, text: '<i class="fa fa-refresh"></i>' },
                        {
                            extend: 'excelHtml5', footer: true, filename: 'users', className: 'btn my_btn btn-sm', exportOptions: { columns: [$('thead th:not(.noexport):not(:empty)')] }, text: '@_localizer["excel"]',
                            action: function (e, dt, node, config)
                            {
                                window.location.href = '@Url.Action("LoadTable", "PersonalData")' + getFilterUrl();
                            },
                            init: function (api, node, config)
                            {
                                $(node).removeClass('dt-button');
                            }

                        },
                        {
                            extend: 'print', footer: true, className: 'btn my_btn btn-sm',
                            exportOptions: {
                                columns: [$('thead th:not(.noexport):not(:empty)')],
                                modifier: {
                                    page: 'current'
                                },
                            },
                            text: '@_localizer["print"]',
                            action: function (e, dt, node, config)
                            {
                                $.ajax({
                                    type: "POST",
                                    url: "/PersonalData/PersonalPrintTable" + getFilterUrl(),

                                    success: function (data)
                                    {
                                        newPrintBody(data)
                                    }
                                });
                            },
                            init: function (api, node, config)
                            {
                                $(node).removeClass('dt-button');
                            }
                        }

                    ],

                    dom: template,
                    ajax: {
                        type: "POST",
                        url: '@Url.Action("LoadTable", "PersonalData")' + getFilterUrl(),
                        contentType: "application/json; charset=utf-8",
                        async: true,
                        headers: {
                            "XSRF-TOKEN": document.querySelector('[name="__RequestVerificationToken"]').value
                        },
                        data: function (data)
                        {
                            let additionalValues = [];
                            data.AdditionalValues = additionalValues;
                            return JSON.stringify(data);
                        }
                    },
                    columns: [
                        // {
                        //     data: "Id",
                        //     title: "@_localizer["ID"]",

                        //     name: "co"
                        // },
                        {
                            data: "Name",
                            name: "co",
                            searchable: true,
                            title: "Name",

                        },
                        {
                            data: "Email",
                            name: "co",
                            searchable: true,
                            title: "Email",

                        },
                        {
                            data: "Phone",
                            name: "co",
                            searchable: true,
                            title: "Phone",

                        },
                        {
                            data: "Age",
                            name: "co",
                            searchable: true,
                            title: "Age",
                        },


                        {
                            data: "Cities",
                            name: "co",
                            searchable: true,
                            title: "City",

                        },
                        // {
                        //     data: "Nationality",
                        //     name: "co",
                        //     searchable: true,
                        //     title: "Nationality",
                        //
                        // },
                        // {
                        //     data: "City",
                        //     name: "co",
                        //     searchable: true,
                        //     title: "City",

                        // },
                        {
                            data: "Desire",
                            name: "co",
                            searchable: true,
                            title: "Desire ",

                        },

                        {
                            data: "Genders",
                            name: "co",
                            searchable: true,
                            title: "Genders",

                        },
                        {
                            data: "CreatedOnUtc",
                            searchable: false,
                            name: "eq",
                            title: "Created At",
                        },

                    ]
                });

                table.columns().every(function (index)
                {
                    $('#approved  thead tr:last th:eq(' + index + ') input')
                        .on('keyup',
                            function (e)
                            {
                                if (e.keyCode === 13)
                                {
                                    table.column($(this).parent().index() + ':visible').search(this.value).draw();
                                }
                            });
                    $('#approved  thead tr:last th:eq(' + index + ') input')
                        .on('blur',
                            function ()
                            {
                                table.column($(this).parent().index() + ':visible').search(this.value).draw();
                            });
                    if ($(".btn.my_btn.btn-clean").length > 0)
                    {
                        $("div.btn-clean").html($(".btn.my_btn.btn-clean"));
                    }
                });
            }
        });
        function loadTableWithData()
        {
            $('#approved').DataTable().ajax.url(`@Url.Action("LoadTable", "PersonalData")` + getFilterUrl()).load();

        }
        function getFilterUrl()
        {
            return `?name=${$("#Name").val()}&age=${$("#Age").val()}&weight=${$("#Weight").val()}
                                                                            &email=${$("#Email").val()}&Phone=${$("#Phone").val()}&IdNo=${$("#IdNo").val()}`;
        }


    </script>
}

